"""Clean up on unique constraints

Revision ID: 881dc818423c
Revises: 47ef746d0398
Create Date: 2023-06-27 10:15:37.832703

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '881dc818423c'
down_revision = '47ef746d0398'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('authors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('books', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('books', 'number_of_pages',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index('ix_books_number_of_pages', table_name='books')
    op.drop_index('ix_books_name', table_name='books')
    op.create_index(op.f('ix_books_name'), 'books', ['name'], unique=False)
    op.create_unique_constraint('author_book_name_uc', 'books', ['author_id', 'name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('author_book_name_uc', 'books', type_='unique')
    op.drop_index(op.f('ix_books_name'), table_name='books')
    op.create_index('ix_books_name', 'books', ['name'], unique=False)
    op.create_index('ix_books_number_of_pages', 'books', ['number_of_pages'], unique=False)
    op.alter_column('books', 'number_of_pages',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('books', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('authors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
